#ifndef BEATFILES_H
#define BEATFILES_H

#include "Node.h"
#include <vector>
#include <string>

// Imports "onset" data from sonic-annotator
// Onset data is generated by the "aubio-onset" plugin,
// and is a csv file with one datum per line: the sample ID
// of the next "onset"
class NodeOnset : public Node
{
public:
    NodeOnset();
    void operator() (void);

    int     getNextBeat(int sample);

    void    loadFile(std::string filename);

    Param<bool> _output;

    Param<int> _offset;

    // May want to define a "file" param for input file.
    // Could be auto-filled to look in standard locations.
private:
    std::vector<int> _onsets;
};

// Imports "bar-beat" data from sonic-annotator
// This s generated by the "qm barbeat tracker" plugin,
// and is a csv file with two data per line: the sample ID
// of the next beat, and its bar number.  Since the bar numbers
// start at 1 and increase by one every sample, we don't explicitly
// record them here.
class NodeBar : public Node
{
public:
    NodeBar();
    void    operator() (void);
    int     getNextBeat(int sample);

    void    loadFile(std::string filename);
private:
    std::vector<int> _bars;
};

#endif // BEATFILES_H
